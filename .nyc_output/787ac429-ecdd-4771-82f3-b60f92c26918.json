{"C:\\Users\\Dani\\mutant\\api\\api\\src\\config\\server\\server.ts":{"path":"C:\\Users\\Dani\\mutant\\api\\api\\src\\config\\server\\server.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":16},"end":{"line":3,"column":34}},"2":{"start":{"line":4,"column":19},"end":{"line":4,"column":54}},"3":{"start":{"line":5,"column":15},"end":{"line":5,"column":38}},"4":{"start":{"line":9,"column":12},"end":{"line":9,"column":21}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":26}},"6":{"start":{"line":17,"column":0},"end":{"line":17,"column":17}},"7":{"start":{"line":21,"column":0},"end":{"line":21,"column":33}},"8":{"start":{"line":25,"column":0},"end":{"line":25,"column":42}},"9":{"start":{"line":29,"column":0},"end":{"line":29,"column":55}},"10":{"start":{"line":33,"column":0},"end":{"line":33,"column":22}}},"fnMap":{},"branchMap":{"0":{"loc":{"start":{"line":25,"column":16},"end":{"line":25,"column":40}},"type":"binary-expr","locations":[{"start":{"line":25,"column":16},"end":{"line":25,"column":32}},{"start":{"line":25,"column":36},"end":{"line":25,"column":40}}],"line":25},"1":{"loc":{"start":{"line":29,"column":18},"end":{"line":29,"column":53}},"type":"binary-expr","locations":[{"start":{"line":29,"column":18},"end":{"line":29,"column":36}},{"start":{"line":29,"column":40},"end":{"line":29,"column":53}}],"line":29}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1},"f":{},"b":{"0":[1,0],"1":[1,1]},"inputSourceMap":{"version":3,"file":"C:\\Users\\Dani\\mutant\\api\\api\\src\\config\\server\\server.ts","sources":["C:\\Users\\Dani\\mutant\\api\\api\\src\\config\\server\\server.ts"],"names":[],"mappings":";;AAAA,mCAAmC;AACnC,uDAAuD;AACvD,uCAAuC;AAEvC;;GAEG;AACH,MAAM,GAAG,GAAwB,OAAO,EAAE,CAAC;AAE3C;;GAEG;AACH,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;AAE1B;;GAEG;AACH,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAEjB;;GAEG;AACH,UAAU,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC;AAEjC;;GAEG;AACH,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC;AAE1C;;GAEG;AACH,GAAG,CAAC,GAAG,CAAC,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,MAAM,IAAI,aAAa,CAAC,CAAC;AAEvD;;GAEG;AACH,kBAAe,GAAG,CAAC","sourcesContent":["import * as express from 'express';\r\nimport * as Middleware from '../middleware/middleware';\r\nimport * as Routes from '../../routes';\r\n\r\n/**\r\n * @constant {express.Application}\r\n */\r\nconst app: express.Application = express();\r\n\r\n/** \r\n * @constructs express.Application Middleware\r\n */\r\nMiddleware.configure(app);\r\n\r\n/**\r\n * @constructs express.Application Routes\r\n */\r\nRoutes.init(app);\r\n\r\n/**\r\n * @constructs express.Application Error Handler\r\n */\r\nMiddleware.initErrorHandler(app);\r\n\r\n/**\r\n * sets port 3000 to default or unless otherwise specified in the environment\r\n */\r\napp.set('port', process.env.PORT || 3000);\r\n\r\n/**\r\n * sets secret to 'superSecret', otherwise specified in the environment\r\n */\r\napp.set('secret', process.env.SECRET || 'superSecret');\r\n\r\n/**\r\n * @exports {express.Application}\r\n */\r\nexport default app;\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5dbfe6e5a02c4cf18e6409bea7d6a7af96e36c6c","contentHash":"4f5316566e83bdc46f408fca8f94e0d3e9f0315d9e8e8e29331c0f15733248a6"},"C:\\Users\\Dani\\mutant\\api\\api\\src\\config\\middleware\\middleware.ts":{"path":"C:\\Users\\Dani\\mutant\\api\\api\\src\\config\\middleware\\middleware.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":19},"end":{"line":3,"column":41}},"2":{"start":{"line":4,"column":20},"end":{"line":4,"column":42}},"3":{"start":{"line":5,"column":21},"end":{"line":5,"column":45}},"4":{"start":{"line":6,"column":13},"end":{"line":6,"column":28}},"5":{"start":{"line":7,"column":15},"end":{"line":7,"column":32}},"6":{"start":{"line":8,"column":24},"end":{"line":8,"column":57}},"7":{"start":{"line":15,"column":4},"end":{"line":17,"column":8}},"8":{"start":{"line":18,"column":4},"end":{"line":18,"column":31}},"9":{"start":{"line":20,"column":4},"end":{"line":20,"column":28}},"10":{"start":{"line":22,"column":4},"end":{"line":22,"column":27}},"11":{"start":{"line":24,"column":4},"end":{"line":24,"column":22}},"12":{"start":{"line":26,"column":4},"end":{"line":26,"column":20}},"13":{"start":{"line":28,"column":4},"end":{"line":28,"column":49}},"14":{"start":{"line":30,"column":4},"end":{"line":39,"column":7}},"15":{"start":{"line":31,"column":8},"end":{"line":31,"column":55}},"16":{"start":{"line":32,"column":8},"end":{"line":32,"column":87}},"17":{"start":{"line":33,"column":8},"end":{"line":36,"column":53}},"18":{"start":{"line":37,"column":8},"end":{"line":37,"column":63}},"19":{"start":{"line":38,"column":8},"end":{"line":38,"column":15}},"20":{"start":{"line":41,"column":0},"end":{"line":41,"column":30}},"21":{"start":{"line":47,"column":4},"end":{"line":50,"column":7}},"22":{"start":{"line":48,"column":8},"end":{"line":48,"column":48}},"23":{"start":{"line":49,"column":8},"end":{"line":49,"column":29}},"24":{"start":{"line":52,"column":0},"end":{"line":52,"column":44}}},"fnMap":{"0":{"name":"configure","decl":{"start":{"line":13,"column":9},"end":{"line":13,"column":18}},"loc":{"start":{"line":13,"column":24},"end":{"line":40,"column":1}},"line":13},"1":{"name":"(anonymous_1)","decl":{"start":{"line":30,"column":12},"end":{"line":30,"column":13}},"loc":{"start":{"line":30,"column":32},"end":{"line":39,"column":5}},"line":30},"2":{"name":"initErrorHandler","decl":{"start":{"line":46,"column":9},"end":{"line":46,"column":25}},"loc":{"start":{"line":46,"column":31},"end":{"line":51,"column":1}},"line":46},"3":{"name":"(anonymous_3)","decl":{"start":{"line":47,"column":12},"end":{"line":47,"column":13}},"loc":{"start":{"line":47,"column":39},"end":{"line":50,"column":5}},"line":47}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":7,"16":7,"17":7,"18":7,"19":7,"20":1,"21":1,"22":3,"23":3,"24":1},"f":{"0":1,"1":7,"2":1,"3":3},"b":{},"inputSourceMap":{"version":3,"file":"C:\\Users\\Dani\\mutant\\api\\api\\src\\config\\middleware\\middleware.ts","sources":["C:\\Users\\Dani\\mutant\\api\\api\\src\\config\\middleware\\middleware.ts"],"names":[],"mappings":";;AAAA,0CAA0C;AAC1C,2CAA2C;AAC3C,8CAA8C;AAC9C,6BAA6B;AAE7B,iCAAiC;AAEjC,0DAA6D;AAC7D;;;GAGG;AACH,SAAgB,SAAS,CAAC,GAAwB;IAC9C,qBAAqB;IACrB,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,UAAU,CAAC;QAC1B,QAAQ,EAAE,KAAK;KAClB,CAAC,CAAC,CAAC;IACJ,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC;IAC3B,yFAAyF;IACzF,GAAG,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC,CAAC;IACxB,qCAAqC;IACrC,GAAG,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,CAAC;IACvB,qEAAqE;IACrE,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC;IAClB,8FAA8F;IAC9F,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;IAEhB,gBAAgB;IAChB,GAAG,CAAC,GAAG,CAAC,mCAAmB,CAAC,CAAC;IAE7B,OAAO;IACP,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE;QACvB,GAAG,CAAC,MAAM,CAAC,6BAA6B,EAAE,GAAG,CAAC,CAAC;QAC/C,GAAG,CAAC,MAAM,CAAC,8BAA8B,EAAE,kCAAkC,CAAC,CAAC;QAC/E,GAAG,CAAC,MAAM,CACN,8BAA8B,EAC9B,2BAA2B;YAC3B,wBAAwB;YACxB,4BAA4B;YAC5B,uCAAuC,CAC1C,CAAC;QACF,GAAG,CAAC,MAAM,CAAC,OAAO,EAAE,iCAAiC,CAAC,CAAC;QACvD,IAAI,EAAE,CAAC;IAGX,CAAC,CAAC,CAAC;AACP,CAAC;AAlCD,8BAkCC;AAMD;;;GAGG;AACH,SAAgB,gBAAgB,CAAC,GAAwB;IACrD,GAAG,CAAC,GAAG,CAAC,CAAC,KAAY,EAAE,GAAoB,EAAE,GAAmB,EAAE,IAA0B,EAAE,EAAE;QAE5F,GAAG,CAAC,aAAa,CAAC,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;QAExC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IACzB,CAAC,CAAC,CAAC;AACP,CAAC;AAPD,4CAOC","sourcesContent":["import * as bodyParser from 'body-parser';\r\nimport * as compression from 'compression';\r\nimport * as cookieParser from 'cookie-parser';\r\nimport * as cors from 'cors';\r\nimport * as express from 'express';\r\nimport * as helmet from 'helmet';\r\nimport { HttpError } from '../error/index';\r\nimport { sendHttpErrorModule } from '../error/sendHttpError';\r\n/**\r\n * @export\r\n * @param {express.Application} app\r\n */\r\nexport function configure(app: express.Application): void {\r\n    // express middleware\r\n    app.use(bodyParser.urlencoded({\r\n        extended: false\r\n    }));\r\n    app.use(bodyParser.json());\r\n    // parse Cookie header and populate req.cookies with an object keyed by the cookie names.\r\n    app.use(cookieParser());\r\n    // returns the compression middleware\r\n    app.use(compression());\r\n    // helps you secure your Express apps by setting various HTTP headers\r\n    app.use(helmet());\r\n    // providing a Connect/Express middleware that can be used to enable CORS with various options\r\n    app.use(cors());\r\n\r\n    // custom errors\r\n    app.use(sendHttpErrorModule);\r\n\r\n    // cors\r\n    app.use((req, res, next) => {\r\n        res.header('Access-Control-Allow-Origin', '*');\r\n        res.header('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, OPTIONS ');\r\n        res.header(\r\n            'Access-Control-Allow-Headers',\r\n            'Origin, X-Requested-With,' +\r\n            ' Content-Type, Accept,' +\r\n            ' Authorization, X-API-KEY,' +\r\n            '  Access-Control-Allow-Request-Method'\r\n        );\r\n        res.header('Allow', 'GET, POST, OPTIONS, PUT, DELETE');\r\n        next();\r\n       \r\n        \r\n    });\r\n}\r\n\r\ninterface CustomResponse extends express.Response {\r\n    sendHttpError: (error: HttpError | Error, message ? : string) => void;\r\n}\r\n\r\n/**\r\n * @export\r\n * @param {express.Application} app\r\n */\r\nexport function initErrorHandler(app: express.Application): void {\r\n    app.use((error: Error, req: express.Request, res: CustomResponse, next: express.NextFunction) => {\r\n        \r\n        res.sendHttpError(error, error.message);\r\n\r\n        console.error(error);\r\n    });\r\n}\r\n\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"14d77df4846ef519d00fbec13358e7f59fd02f56","contentHash":"332e6057258c1cb2881bf686d9175c8e53f655bbd3272da31a5d976a2bbbd4a1"},"C:\\Users\\Dani\\mutant\\api\\api\\src\\config\\error\\sendHttpError.ts":{"path":"C:\\Users\\Dani\\mutant\\api\\api\\src\\config\\error\\sendHttpError.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":4,"column":4},"end":{"line":6,"column":6}},"2":{"start":{"line":5,"column":8},"end":{"line":5,"column":53}},"3":{"start":{"line":7,"column":4},"end":{"line":7,"column":11}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":50}}},"fnMap":{"0":{"name":"sendHttpErrorModule","decl":{"start":{"line":3,"column":9},"end":{"line":3,"column":28}},"loc":{"start":{"line":3,"column":45},"end":{"line":8,"column":1}},"line":3},"1":{"name":"(anonymous_1)","decl":{"start":{"line":4,"column":24},"end":{"line":4,"column":25}},"loc":{"start":{"line":4,"column":35},"end":{"line":6,"column":5}},"line":4}},"branchMap":{},"s":{"0":1,"1":7,"2":3,"3":7,"4":1},"f":{"0":7,"1":3},"b":{},"inputSourceMap":{"version":3,"file":"C:\\Users\\Dani\\mutant\\api\\api\\src\\config\\error\\sendHttpError.ts","sources":["C:\\Users\\Dani\\mutant\\api\\api\\src\\config\\error\\sendHttpError.ts"],"names":[],"mappings":";;AAGA,SAAgB,mBAAmB,CAAC,GAAY,EAAE,GAAQ,EAAE,IAAkB;IAC1E,GAAG,CAAC,aAAa,GAAG,CAAC,KAAgB,EAAQ,EAAE;QAC3C,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IACjD,CAAC,CAAC;IAEF,IAAI,EAAE,CAAC;AACX,CAAC;AAND,kDAMC","sourcesContent":["import { HttpError } from './index';\r\nimport { NextFunction, Request } from 'express';\r\n\r\nexport function sendHttpErrorModule(req: Request, res: any, next: NextFunction): void {\r\n    res.sendHttpError = (error: HttpError): void => {\r\n        res.status(error.status).send(error.message);\r\n    };\r\n\r\n    next();\r\n}\r\n\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"1a7886e9937ae69b364016bc16bd6094c3d43b03","contentHash":"1320eba99b0261de13e6afa0f13f3680dd31b6320c51dd725fb6dccccdb56a7c"},"C:\\Users\\Dani\\mutant\\api\\api\\src\\routes\\index.ts":{"path":"C:\\Users\\Dani\\mutant\\api\\api\\src\\routes\\index.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":16},"end":{"line":3,"column":34}},"2":{"start":{"line":4,"column":13},"end":{"line":4,"column":28}},"3":{"start":{"line":5,"column":18},"end":{"line":5,"column":47}},"4":{"start":{"line":6,"column":20},"end":{"line":6,"column":42}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":43}},"6":{"start":{"line":10,"column":19},"end":{"line":10,"column":35}},"7":{"start":{"line":11,"column":4},"end":{"line":11,"column":41}},"8":{"start":{"line":12,"column":4},"end":{"line":15,"column":5}},"9":{"start":{"line":13,"column":8},"end":{"line":13,"column":42}},"10":{"start":{"line":14,"column":8},"end":{"line":14,"column":54}},"11":{"start":{"line":16,"column":4},"end":{"line":18,"column":7}},"12":{"start":{"line":17,"column":8},"end":{"line":17,"column":53}},"13":{"start":{"line":19,"column":4},"end":{"line":19,"column":20}},"14":{"start":{"line":21,"column":0},"end":{"line":21,"column":20}}},"fnMap":{"0":{"name":"init","decl":{"start":{"line":9,"column":9},"end":{"line":9,"column":13}},"loc":{"start":{"line":9,"column":19},"end":{"line":20,"column":1}},"line":9},"1":{"name":"(anonymous_1)","decl":{"start":{"line":16,"column":12},"end":{"line":16,"column":13}},"loc":{"start":{"line":16,"column":32},"end":{"line":18,"column":5}},"line":16}},"branchMap":{"0":{"loc":{"start":{"line":12,"column":4},"end":{"line":15,"column":5}},"type":"if","locations":[{"start":{"line":12,"column":4},"end":{"line":15,"column":5}},{"start":{"line":12,"column":4},"end":{"line":15,"column":5}}],"line":12}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1},"f":{"0":1,"1":1},"b":{"0":[1,0]},"inputSourceMap":{"version":3,"file":"C:\\Users\\Dani\\mutant\\api\\api\\src\\routes\\index.ts","sources":["C:\\Users\\Dani\\mutant\\api\\api\\src\\routes\\index.ts"],"names":[],"mappings":";;AAAA,mCAAmC;AACnC,6BAA6B;AAC7B,gDAAgD;AAChD,2CAAoC;AACpC,IAAI,UAAkB,CAAC;AAEvB,UAAU,GAAG,OAAO,CAAC,oBAAoB,CAAC,CAAC;AAI3C,SAAgB,IAAI,CAAC,GAAwB;IACzC,MAAM,MAAM,GAAmB,OAAO,CAAC,MAAM,EAAE,CAAC;IAEhD,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,mBAAS,CAAC,CAAC;IAI3B,IAAI,UAAU,EAAE;QACZ,GAAG,CAAC,GAAG,CAAC,OAAO,EAAE,SAAS,CAAC,KAAK,CAAC,CAAC;QAClC,GAAG,CAAC,GAAG,CAAC,OAAO,EAAE,SAAS,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC;KACjD;IAED,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE;QACvB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC;IACjD,CAAC,CAAC,CAAC;IAEH,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AAEpB,CAAC;AAlBD,oBAkBC","sourcesContent":["import * as express from 'express';\r\nimport * as http from 'http';\r\nimport * as swaggerUi from 'swagger-ui-express';\r\nimport DnaRouter from './DnaRouter';\r\nlet swaggerDoc: Object;\r\n\r\nswaggerDoc = require('../../swagger.json');\r\n\r\n\r\n\r\nexport function init(app: express.Application): void {\r\n    const router: express.Router = express.Router();\r\n\r\n    app.use('/api', DnaRouter);\r\n\r\n    \r\n\r\n    if (swaggerDoc) {\r\n        app.use('/docs', swaggerUi.serve);\r\n        app.get('/docs', swaggerUi.setup(swaggerDoc));\r\n    } \r\n\r\n    app.use((req, res, next) => {\r\n        res.status(404).send(http.STATUS_CODES[404]);\r\n    });\r\n\r\n    app.use(router);\r\n\r\n}\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"01771cc6587aa4790024eb9e6f16ab5c05296c54","contentHash":"b56fb3e5c6bb3ce82dc4966803a08de875b219bcc98d112281e3f2a82387e3f1"},"C:\\Users\\Dani\\mutant\\api\\api\\src\\routes\\DnaRouter.ts":{"path":"C:\\Users\\Dani\\mutant\\api\\api\\src\\routes\\DnaRouter.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":18},"end":{"line":3,"column":36}},"2":{"start":{"line":4,"column":21},"end":{"line":4,"column":45}},"3":{"start":{"line":5,"column":15},"end":{"line":5,"column":33}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":57}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":54}},"6":{"start":{"line":10,"column":0},"end":{"line":10,"column":25}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"C:\\Users\\Dani\\mutant\\api\\api\\src\\routes\\DnaRouter.ts","sources":["C:\\Users\\Dani\\mutant\\api\\api\\src\\routes\\DnaRouter.ts"],"names":[],"mappings":";;AAAA,qCAAiC;AACjC,8CAA6C;AAE7C,MAAM,MAAM,GAAW,gBAAM,EAAE,CAAC;AAEhC,8CAA8C;AAE9C,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,yBAAY,CAAC,MAAM,CAAC,CAAC;AAC5C,MAAM,CAAC,GAAG,CAAC,QAAQ,EAAE,yBAAY,CAAC,KAAK,CAAC,CAAC;AAEzC,4CAA4C;AAE5C,kBAAe,MAAM,CAAC","sourcesContent":["import { Router } from 'express';\r\nimport { DnaComponent } from '../components';\r\n\r\nconst router: Router = Router();\r\n\r\n// router.get('/mutant', DnaComponent.mutant);\r\n\r\nrouter.post('/mutant', DnaComponent.mutant);\r\nrouter.get('/stats', DnaComponent.stats);\r\n\r\n// router.get('/:id', DnaComponent.findOne);\r\n\r\nexport default router;\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"82e29c7a49df57f54c905908529bae1ba3698f3b","contentHash":"7a7b4c35a6cbd3366f33d80046d4cca6600231fb05036c98494e374508ad4be3"},"C:\\Users\\Dani\\mutant\\api\\api\\src\\components\\index.ts":{"path":"C:\\Users\\Dani\\mutant\\api\\api\\src\\components\\index.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":21},"end":{"line":3,"column":37}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":36}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"C:\\Users\\Dani\\mutant\\api\\api\\src\\components\\index.ts","sources":["C:\\Users\\Dani\\mutant\\api\\api\\src\\components\\index.ts"],"names":[],"mappings":";;AAAA,sCAAsC;AAGlC,oCAAY","sourcesContent":["import * as DnaComponent from './Dna';\r\n\r\nexport { \r\n    DnaComponent\r\n};\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2d71a0b64c12a7c72cee7287f9113682cbad025e","contentHash":"953809e1f17f71d3de10b77d3fab1a931f355316c028c4f7b0b3ebc713ccf478"},"C:\\Users\\Dani\\mutant\\api\\api\\src\\components\\Dna\\index.ts":{"path":"C:\\Users\\Dani\\mutant\\api\\api\\src\\components\\Dna\\index.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":9,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":8,"column":7}},"2":{"start":{"line":4,"column":36},"end":{"line":4,"column":97}},"3":{"start":{"line":4,"column":42},"end":{"line":4,"column":70}},"4":{"start":{"line":4,"column":85},"end":{"line":4,"column":95}},"5":{"start":{"line":5,"column":35},"end":{"line":5,"column":100}},"6":{"start":{"line":5,"column":41},"end":{"line":5,"column":73}},"7":{"start":{"line":5,"column":88},"end":{"line":5,"column":98}},"8":{"start":{"line":6,"column":32},"end":{"line":6,"column":149}},"9":{"start":{"line":6,"column":97},"end":{"line":6,"column":119}},"10":{"start":{"line":7,"column":8},"end":{"line":7,"column":78}},"11":{"start":{"line":10,"column":0},"end":{"line":10,"column":62}},"12":{"start":{"line":11,"column":18},"end":{"line":11,"column":38}},"13":{"start":{"line":12,"column":16},"end":{"line":12,"column":45}},"14":{"start":{"line":14,"column":4},"end":{"line":27,"column":7}},"15":{"start":{"line":15,"column":8},"end":{"line":26,"column":9}},"16":{"start":{"line":16,"column":29},"end":{"line":16,"column":69}},"17":{"start":{"line":17,"column":12},"end":{"line":22,"column":13}},"18":{"start":{"line":18,"column":16},"end":{"line":18,"column":36}},"19":{"start":{"line":21,"column":16},"end":{"line":21,"column":36}},"20":{"start":{"line":25,"column":12},"end":{"line":25,"column":60}},"21":{"start":{"line":29,"column":0},"end":{"line":29,"column":24}},"22":{"start":{"line":31,"column":4},"end":{"line":34,"column":7}},"23":{"start":{"line":32,"column":22},"end":{"line":32,"column":53}},"24":{"start":{"line":33,"column":8},"end":{"line":33,"column":36}},"25":{"start":{"line":36,"column":0},"end":{"line":36,"column":22}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":3,"column":36},"end":{"line":3,"column":37}},"loc":{"start":{"line":3,"column":63},"end":{"line":8,"column":5}},"line":3},"2":{"name":"fulfilled","decl":{"start":{"line":4,"column":17},"end":{"line":4,"column":26}},"loc":{"start":{"line":4,"column":34},"end":{"line":4,"column":99}},"line":4},"3":{"name":"rejected","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":25}},"loc":{"start":{"line":5,"column":33},"end":{"line":5,"column":102}},"line":5},"4":{"name":"step","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":21}},"loc":{"start":{"line":6,"column":30},"end":{"line":6,"column":151}},"line":6},"5":{"name":"(anonymous_5)","decl":{"start":{"line":6,"column":76},"end":{"line":6,"column":77}},"loc":{"start":{"line":6,"column":95},"end":{"line":6,"column":121}},"line":6},"6":{"name":"mutant","decl":{"start":{"line":13,"column":9},"end":{"line":13,"column":15}},"loc":{"start":{"line":13,"column":32},"end":{"line":28,"column":1}},"line":13},"7":{"name":"(anonymous_7)","decl":{"start":{"line":14,"column":43},"end":{"line":14,"column":44}},"loc":{"start":{"line":14,"column":56},"end":{"line":27,"column":5}},"line":14},"8":{"name":"stats","decl":{"start":{"line":30,"column":9},"end":{"line":30,"column":14}},"loc":{"start":{"line":30,"column":31},"end":{"line":35,"column":1}},"line":30},"9":{"name":"(anonymous_9)","decl":{"start":{"line":31,"column":43},"end":{"line":31,"column":44}},"loc":{"start":{"line":31,"column":56},"end":{"line":34,"column":5}},"line":31}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":9,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":9,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":16},"end":{"line":3,"column":34}},"type":"binary-expr","locations":[{"start":{"line":3,"column":16},"end":{"line":3,"column":17}},{"start":{"line":3,"column":22},"end":{"line":3,"column":33}}],"line":3},"2":{"loc":{"start":{"line":6,"column":32},"end":{"line":6,"column":148}},"type":"cond-expr","locations":[{"start":{"line":6,"column":46},"end":{"line":6,"column":67}},{"start":{"line":6,"column":70},"end":{"line":6,"column":148}}],"line":6},"3":{"loc":{"start":{"line":7,"column":51},"end":{"line":7,"column":67}},"type":"binary-expr","locations":[{"start":{"line":7,"column":51},"end":{"line":7,"column":61}},{"start":{"line":7,"column":65},"end":{"line":7,"column":67}}],"line":7},"4":{"loc":{"start":{"line":17,"column":12},"end":{"line":22,"column":13}},"type":"if","locations":[{"start":{"line":17,"column":12},"end":{"line":22,"column":13}},{"start":{"line":17,"column":12},"end":{"line":22,"column":13}}],"line":17}},"s":{"0":1,"1":6,"2":3,"3":3,"4":0,"5":3,"6":3,"7":0,"8":12,"9":6,"10":6,"11":1,"12":1,"13":1,"14":5,"15":5,"16":5,"17":2,"18":1,"19":1,"20":3,"21":1,"22":1,"23":1,"24":1,"25":1},"f":{"0":6,"1":6,"2":3,"3":3,"4":12,"5":6,"6":5,"7":5,"8":1,"9":1},"b":{"0":[1,1,1],"1":[6,6],"2":[6,6],"3":[6,6],"4":[1,1]},"inputSourceMap":{"version":3,"file":"C:\\Users\\Dani\\mutant\\api\\api\\src\\components\\Dna\\index.ts","sources":["C:\\Users\\Dani\\mutant\\api\\api\\src\\components\\Dna\\index.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,uCAAmC;AACnC,8CAA+C;AAI/C,SAAsB,MAAM,CAAC,GAAY,EAAE,GAAa,EAAE,IAAkB;;QACxE,IAAI;YACA,MAAM,QAAQ,GAAY,MAAM,iBAAU,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAE5D,IAAI,QAAQ,EAAE;gBACV,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;aACvB;iBAAK;gBACF,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;aACvB;SACJ;QAAC,OAAO,KAAK,EAAE;YACZ,IAAI,CAAC,IAAI,iBAAS,CAAC,GAAG,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;SAC3C;IACL,CAAC;CAAA;AAZD,wBAYC;AAED,SAAsB,KAAK,CAAC,GAAY,EAAE,GAAa,EAAE,IAAkB;;QACvE,MAAM,KAAK,GAAc,MAAM,iBAAU,CAAC,KAAK,EAAE,CAAC;QAElD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAChC,CAAC;CAAA;AAJD,sBAIC","sourcesContent":["import DnaService from './service';\r\nimport { HttpError } from '../../config/error';\r\nimport { IDnaModel } from './model';\r\nimport { NextFunction, Request, Response } from 'express';\r\n\r\nexport async function mutant(req: Request, res: Response, next: NextFunction): Promise < void > {\r\n    try {\r\n        const isMutant: boolean = await DnaService.mutant(req.body);\r\n\r\n        if (isMutant) { \r\n            res.sendStatus(200);\r\n        }else {\r\n            res.sendStatus(403);\r\n        }    \r\n    } catch (error) {\r\n        next(new HttpError(500, error.message));\r\n    }\r\n}\r\n\r\nexport async function stats(req: Request, res: Response, next: NextFunction): Promise < void > {\r\n    const stats: IDnaModel = await DnaService.stats();\r\n\r\n    res.status(200).json(stats);\r\n}\r\n\r\n\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"1dc1bbe05599f4dc0b987af7eca98baa5e676a4a","contentHash":"05a53cc57b7beb9b3dde315fd1061ef5d1d4f7c9a41a67144fa9a4a32dea5644"},"C:\\Users\\Dani\\mutant\\api\\api\\src\\components\\Dna\\service.ts":{"path":"C:\\Users\\Dani\\mutant\\api\\api\\src\\components\\Dna\\service.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":9,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":8,"column":7}},"2":{"start":{"line":4,"column":36},"end":{"line":4,"column":97}},"3":{"start":{"line":4,"column":42},"end":{"line":4,"column":70}},"4":{"start":{"line":4,"column":85},"end":{"line":4,"column":95}},"5":{"start":{"line":5,"column":35},"end":{"line":5,"column":100}},"6":{"start":{"line":5,"column":41},"end":{"line":5,"column":73}},"7":{"start":{"line":5,"column":88},"end":{"line":5,"column":98}},"8":{"start":{"line":6,"column":32},"end":{"line":6,"column":149}},"9":{"start":{"line":6,"column":97},"end":{"line":6,"column":119}},"10":{"start":{"line":7,"column":8},"end":{"line":7,"column":78}},"11":{"start":{"line":10,"column":0},"end":{"line":10,"column":62}},"12":{"start":{"line":11,"column":16},"end":{"line":11,"column":34}},"13":{"start":{"line":12,"column":21},"end":{"line":12,"column":44}},"14":{"start":{"line":14,"column":15},"end":{"line":14,"column":34}},"15":{"start":{"line":17,"column":19},"end":{"line":120,"column":1}},"16":{"start":{"line":19,"column":8},"end":{"line":58,"column":11}},"17":{"start":{"line":20,"column":12},"end":{"line":57,"column":13}},"18":{"start":{"line":21,"column":33},"end":{"line":21,"column":65}},"19":{"start":{"line":22,"column":16},"end":{"line":24,"column":17}},"20":{"start":{"line":23,"column":20},"end":{"line":23,"column":60}},"21":{"start":{"line":25,"column":28},"end":{"line":25,"column":36}},"22":{"start":{"line":26,"column":40},"end":{"line":26,"column":45}},"23":{"start":{"line":27,"column":36},"end":{"line":35,"column":57}},"24":{"start":{"line":28,"column":20},"end":{"line":31,"column":21}},"25":{"start":{"line":29,"column":24},"end":{"line":29,"column":49}},"26":{"start":{"line":30,"column":24},"end":{"line":30,"column":67}},"27":{"start":{"line":32,"column":20},"end":{"line":34,"column":21}},"28":{"start":{"line":33,"column":24},"end":{"line":33,"column":37}},"29":{"start":{"line":35,"column":37},"end":{"line":35,"column":56}},"30":{"start":{"line":36,"column":16},"end":{"line":38,"column":17}},"31":{"start":{"line":37,"column":20},"end":{"line":37,"column":82}},"32":{"start":{"line":39,"column":16},"end":{"line":41,"column":17}},"33":{"start":{"line":40,"column":20},"end":{"line":40,"column":109}},"34":{"start":{"line":42,"column":33},"end":{"line":42,"column":58}},"35":{"start":{"line":43,"column":31},"end":{"line":47,"column":17}},"36":{"start":{"line":48,"column":31},"end":{"line":48,"column":59}},"37":{"start":{"line":49,"column":16},"end":{"line":52,"column":19}},"38":{"start":{"line":53,"column":16},"end":{"line":53,"column":32}},"39":{"start":{"line":56,"column":16},"end":{"line":56,"column":47}},"40":{"start":{"line":61,"column":8},"end":{"line":118,"column":11}},"41":{"start":{"line":62,"column":12},"end":{"line":117,"column":13}},"42":{"start":{"line":63,"column":30},"end":{"line":104,"column":17}},"43":{"start":{"line":105,"column":28},"end":{"line":105,"column":66}},"44":{"start":{"line":106,"column":16},"end":{"line":112,"column":17}},"45":{"start":{"line":107,"column":20},"end":{"line":111,"column":27}},"46":{"start":{"line":113,"column":16},"end":{"line":113,"column":32}},"47":{"start":{"line":116,"column":16},"end":{"line":116,"column":47}},"48":{"start":{"line":121,"column":0},"end":{"line":121,"column":29}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":3,"column":36},"end":{"line":3,"column":37}},"loc":{"start":{"line":3,"column":63},"end":{"line":8,"column":5}},"line":3},"2":{"name":"fulfilled","decl":{"start":{"line":4,"column":17},"end":{"line":4,"column":26}},"loc":{"start":{"line":4,"column":34},"end":{"line":4,"column":99}},"line":4},"3":{"name":"rejected","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":25}},"loc":{"start":{"line":5,"column":33},"end":{"line":5,"column":102}},"line":5},"4":{"name":"step","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":21}},"loc":{"start":{"line":6,"column":30},"end":{"line":6,"column":151}},"line":6},"5":{"name":"(anonymous_5)","decl":{"start":{"line":6,"column":76},"end":{"line":6,"column":77}},"loc":{"start":{"line":6,"column":95},"end":{"line":6,"column":121}},"line":6},"6":{"name":"(anonymous_6)","decl":{"start":{"line":18,"column":4},"end":{"line":18,"column":5}},"loc":{"start":{"line":18,"column":17},"end":{"line":59,"column":5}},"line":18},"7":{"name":"(anonymous_7)","decl":{"start":{"line":19,"column":47},"end":{"line":19,"column":48}},"loc":{"start":{"line":19,"column":60},"end":{"line":58,"column":9}},"line":19},"8":{"name":"(anonymous_8)","decl":{"start":{"line":27,"column":44},"end":{"line":27,"column":45}},"loc":{"start":{"line":27,"column":58},"end":{"line":35,"column":17}},"line":27},"9":{"name":"(anonymous_9)","decl":{"start":{"line":35,"column":26},"end":{"line":35,"column":27}},"loc":{"start":{"line":35,"column":37},"end":{"line":35,"column":56}},"line":35},"10":{"name":"(anonymous_10)","decl":{"start":{"line":60,"column":4},"end":{"line":60,"column":5}},"loc":{"start":{"line":60,"column":12},"end":{"line":119,"column":5}},"line":60},"11":{"name":"(anonymous_11)","decl":{"start":{"line":61,"column":47},"end":{"line":61,"column":48}},"loc":{"start":{"line":61,"column":60},"end":{"line":118,"column":9}},"line":61}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":9,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":9,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":16},"end":{"line":3,"column":34}},"type":"binary-expr","locations":[{"start":{"line":3,"column":16},"end":{"line":3,"column":17}},{"start":{"line":3,"column":22},"end":{"line":3,"column":33}}],"line":3},"2":{"loc":{"start":{"line":6,"column":32},"end":{"line":6,"column":148}},"type":"cond-expr","locations":[{"start":{"line":6,"column":46},"end":{"line":6,"column":67}},{"start":{"line":6,"column":70},"end":{"line":6,"column":148}}],"line":6},"3":{"loc":{"start":{"line":7,"column":51},"end":{"line":7,"column":67}},"type":"binary-expr","locations":[{"start":{"line":7,"column":51},"end":{"line":7,"column":61}},{"start":{"line":7,"column":65},"end":{"line":7,"column":67}}],"line":7},"4":{"loc":{"start":{"line":22,"column":16},"end":{"line":24,"column":17}},"type":"if","locations":[{"start":{"line":22,"column":16},"end":{"line":24,"column":17}},{"start":{"line":22,"column":16},"end":{"line":24,"column":17}}],"line":22},"5":{"loc":{"start":{"line":28,"column":20},"end":{"line":31,"column":21}},"type":"if","locations":[{"start":{"line":28,"column":20},"end":{"line":31,"column":21}},{"start":{"line":28,"column":20},"end":{"line":31,"column":21}}],"line":28},"6":{"loc":{"start":{"line":32,"column":20},"end":{"line":34,"column":21}},"type":"if","locations":[{"start":{"line":32,"column":20},"end":{"line":34,"column":21}},{"start":{"line":32,"column":20},"end":{"line":34,"column":21}}],"line":32},"7":{"loc":{"start":{"line":36,"column":16},"end":{"line":38,"column":17}},"type":"if","locations":[{"start":{"line":36,"column":16},"end":{"line":38,"column":17}},{"start":{"line":36,"column":16},"end":{"line":38,"column":17}}],"line":36},"8":{"loc":{"start":{"line":39,"column":16},"end":{"line":41,"column":17}},"type":"if","locations":[{"start":{"line":39,"column":16},"end":{"line":41,"column":17}},{"start":{"line":39,"column":16},"end":{"line":41,"column":17}}],"line":39},"9":{"loc":{"start":{"line":45,"column":28},"end":{"line":45,"column":44}},"type":"cond-expr","locations":[{"start":{"line":45,"column":39},"end":{"line":45,"column":40}},{"start":{"line":45,"column":43},"end":{"line":45,"column":44}}],"line":45},"10":{"loc":{"start":{"line":46,"column":27},"end":{"line":46,"column":43}},"type":"cond-expr","locations":[{"start":{"line":46,"column":38},"end":{"line":46,"column":39}},{"start":{"line":46,"column":42},"end":{"line":46,"column":43}}],"line":46},"11":{"loc":{"start":{"line":106,"column":16},"end":{"line":112,"column":17}},"type":"if","locations":[{"start":{"line":106,"column":16},"end":{"line":112,"column":17}},{"start":{"line":106,"column":16},"end":{"line":112,"column":17}}],"line":106}},"s":{"0":1,"1":6,"2":3,"3":3,"4":0,"5":0,"6":0,"7":0,"8":6,"9":3,"10":6,"11":1,"12":1,"13":1,"14":1,"15":1,"16":5,"17":5,"18":5,"19":5,"20":1,"21":4,"22":4,"23":4,"24":20,"25":1,"26":1,"27":20,"28":10,"29":20,"30":4,"31":2,"32":2,"33":0,"34":2,"35":2,"36":2,"37":2,"38":2,"39":3,"40":1,"41":1,"42":1,"43":1,"44":1,"45":0,"46":1,"47":0,"48":1},"f":{"0":6,"1":6,"2":3,"3":0,"4":6,"5":3,"6":5,"7":5,"8":20,"9":20,"10":1,"11":1},"b":{"0":[1,1,1],"1":[6,6],"2":[3,3],"3":[6,6],"4":[1,4],"5":[1,19],"6":[10,10],"7":[2,2],"8":[0,2],"9":[1,1],"10":[1,1],"11":[0,1]},"inputSourceMap":{"version":3,"file":"C:\\Users\\Dani\\mutant\\api\\api\\src\\components\\Dna\\service.ts","sources":["C:\\Users\\Dani\\mutant\\api\\api\\src\\components\\Dna\\service.ts"],"names":[],"mappings":"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","sourcesContent":["import * as Joi from 'joi';\r\nimport DnaModel, { IDnaModel } from './model';\r\nimport DnaValidation from './validation';\r\nimport { IDnaService } from './interface';\r\n// import { Types } from 'mongoose';\r\nimport * as mutant from './module';\r\n// import { stats } from '.';\r\n// import { stat } from 'fs';\r\n\r\n\r\n\r\n\r\nconst DnaService: IDnaService = {\r\n    \r\n    async mutant(body: IDnaModel): Promise < boolean > {\r\n\r\n        try {\r\n            \r\n            const validate: Joi.ValidationResult < IDnaModel > = DnaValidation.isDna(body);\r\n            \r\n            if (validate.error) {\r\n                throw new Error(validate.error.message);\r\n            }\r\n            \r\n            const dna: any = body.dna;\r\n            let incorrectSequence : boolean = false;\r\n\r\n            const isQuadratic : boolean[] = dna.map((sequence: string) => {\r\n                if ((/[^A,T,C,G]/i).test(sequence)) {\r\n                    incorrectSequence = true;        \r\n                    console.log('Base nitrogenada incorrecta');\r\n                }\r\n                if (sequence.length !== dna.length) {\r\n                    return false;\r\n                } \r\n                }).filter((value: boolean) => value !== undefined);\r\n            \r\n            if (isQuadratic.length > 0) {\r\n                throw new Error('La matriz de ADN debe ser cuadrada (N x N)');\r\n            }\r\n               \r\n            if (incorrectSequence) { \r\n                throw new Error('Base nitrogenada incorrecta. Solo se permiten los valores A, T, G y C');\r\n            }\r\n\r\n            const isMutant : boolean = mutant.isMutant(body.dna);\r\n            \r\n            \r\n            const dnaObj: any = {\r\n                dna: body.dna.toString(),\r\n                mutant:  isMutant ? 1 : 0,\r\n                human:  isMutant ? 0 : 1,   \r\n            };\r\n            \r\n            const filter : any = { dna: body.dna.toString() };\r\n\r\n            await DnaModel.findOneAndUpdate(filter, dnaObj, {\r\n                new: true,\r\n                upsert: true // Make this update into an upsert\r\n            });\r\n            \r\n            return isMutant;\r\n        } catch (error) {\r\n            throw new Error(error.message);\r\n        }\r\n    },\r\n\r\n    async stats() : Promise < any > {\r\n        try {\r\n            const query: any = \r\n                [\r\n                    { \r\n                        $group : {\r\n                            _id : null, \r\n                            count_mutant_dna : {\r\n                                $sum : '$mutant'\r\n                            }, \r\n                            count_human_dna : {\r\n                                $sum : '$human'\r\n                            }\r\n                        }\r\n                    }, \r\n                    { \r\n                        $project : {\r\n                            _id: 0,\r\n                            count_mutant_dna : 1.0, \r\n                            count_human_dna : 1.0, \r\n                            ratio : {\r\n                                $cond : [\r\n                                    {\r\n                                        $eq : [\r\n                                            '$count_human_dna', \r\n                                            0.0\r\n                                        ]\r\n                                    }, \r\n                                    '100', \r\n                                    {\r\n                                        $multiply : [\r\n                                            {\r\n                                                $divide : [\r\n                                                    '$count_mutant_dna', \r\n                                                    '$count_human_dna'\r\n                                                ]\r\n                                            }, \r\n                                            100.0\r\n                                        ]\r\n                                    }\r\n                                ]\r\n                            }\r\n                        }\r\n                    }\r\n                ];\r\n            \r\n            let stats: any = await DnaModel.aggregate(query);\r\n            \r\n            if (stats.length === 0) {\r\n                stats = [{\r\n                    count_mutant_dna: 0,\r\n                    count_human_dna: 0,\r\n                    ratio: 0\r\n                }];\r\n            }\r\n            \r\n            return stats[0];\r\n        } catch (error) {\r\n            throw new Error(error.message);\r\n        }\r\n    }\r\n};\r\n\r\nexport default DnaService;\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"15f6158a1529ebb0476041c02f6b238d01a7016c","contentHash":"f7625faeda190e076a7aa61c7ac1042831f4164505bae5f40b42d67c85a217f5"},"C:\\Users\\Dani\\mutant\\api\\api\\src\\components\\Dna\\model.ts":{"path":"C:\\Users\\Dani\\mutant\\api\\api\\src\\components\\Dna\\model.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":20},"end":{"line":3,"column":65}},"2":{"start":{"line":4,"column":19},"end":{"line":4,"column":38}},"3":{"start":{"line":5,"column":18},"end":{"line":12,"column":2}},"4":{"start":{"line":13,"column":0},"end":{"line":13,"column":62}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"C:\\Users\\Dani\\mutant\\api\\api\\src\\components\\Dna\\model.ts","sources":["C:\\Users\\Dani\\mutant\\api\\api\\src\\components\\Dna\\model.ts"],"names":[],"mappings":";;AAAA,kEAAkE;AAClE,uCAA4C;AAU5C,MAAM,SAAS,GAAW,IAAI,iBAAM,CAAC;IACjC,GAAG,EAAE,MAAM;IACX,MAAM,EAAE,MAAM;IACd,KAAK,EAAE,MAAM;CAChB,EAAE;IACC,UAAU,EAAE,MAAM;IAClB,UAAU,EAAE,KAAK;CACpB,CAAC,CAAC;AAGH,kBAAe,WAAW,CAAC,EAAE,CAAC,KAAK,CAAgB,UAAU,EAAE,SAAS,CAAC,CAAC","sourcesContent":["import * as connections from '../../config/connection/connection';\r\nimport { Document, Schema } from 'mongoose';\r\nimport { NextFunction } from 'express';\r\n\r\nexport interface IDnaModel extends Document {\r\n    dna: string;\r\n    mutant: number;\r\n    human: number;\r\n}\r\n\r\n\r\nconst DnaSchema: Schema = new Schema({\r\n    dna: String,\r\n    mutant: Number,\r\n    human: Number\r\n}, {\r\n    collection: 'Dnas',\r\n    versionKey: false\r\n});\r\n\r\n\r\nexport default connections.db.model < IDnaModel > ('DnaModel', DnaSchema);\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"779c18ff7c037fde4902299ee0f37b5b6f75be71","contentHash":"1bc92fb214ef5d8cde2e220bf76bb331ace6f8e12b3085f15f565ca4784c5646"},"C:\\Users\\Dani\\mutant\\api\\api\\src\\config\\connection\\connection.ts":{"path":"C:\\Users\\Dani\\mutant\\api\\api\\src\\config\\connection\\connection.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":17},"end":{"line":3,"column":36}},"2":{"start":{"line":4,"column":16},"end":{"line":4,"column":39}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":40}},"4":{"start":{"line":6,"column":23},"end":{"line":10,"column":1}},"5":{"start":{"line":11,"column":18},"end":{"line":11,"column":102}},"6":{"start":{"line":12,"column":0},"end":{"line":12,"column":66}},"7":{"start":{"line":14,"column":0},"end":{"line":16,"column":3}},"8":{"start":{"line":15,"column":4},"end":{"line":15,"column":52}},"9":{"start":{"line":17,"column":0},"end":{"line":19,"column":3}},"10":{"start":{"line":18,"column":4},"end":{"line":18,"column":60}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":14,"column":27},"end":{"line":14,"column":28}},"loc":{"start":{"line":14,"column":33},"end":{"line":16,"column":1}},"line":14},"1":{"name":"(anonymous_1)","decl":{"start":{"line":17,"column":24},"end":{"line":17,"column":25}},"loc":{"start":{"line":17,"column":30},"end":{"line":19,"column":1}},"line":17}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1},"f":{"0":1,"1":1},"b":{},"inputSourceMap":{"version":3,"file":"C:\\Users\\Dani\\mutant\\api\\api\\src\\config\\connection\\connection.ts","sources":["C:\\Users\\Dani\\mutant\\api\\api\\src\\config\\connection\\connection.ts"],"names":[],"mappings":";;AAAA,qCAAqC;AACrC,wCAAkC;AAClC,QAAQ,CAAC,GAAG,CAAC,kBAAkB,EAAE,KAAK,CAAC,CAAC;AAQxC,MAAM,cAAc,GAAoB;IACpC,kBAAkB,EAAE,IAAI;IACxB,eAAe,EAAE,IAAI;IACrB,cAAc,EAAE,IAAI;CACvB,CAAC;AAEF,MAAM,SAAS,GAAW,GAAG,eAAM,CAAC,QAAQ,CAAC,WAAW,GAAG,eAAM,CAAC,QAAQ,CAAC,eAAe,EAAE,CAAC;AAEhF,QAAA,EAAE,GAAwB,QAAQ,CAAC,gBAAgB,CAAC,SAAS,EAAE,cAAc,CAAC,CAAC;AAE5F,WAAW;AAEX,UAAE,CAAC,EAAE,CAAC,WAAW,EAAE,GAAG,EAAE;IACpB,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,sBAAsB,CAAC,CAAC;AACpD,CAAC,CAAC,CAAC;AAEH,UAAE,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE;IACjB,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,8BAA8B,CAAC,CAAC;AAC5D,CAAC,CAAC,CAAC","sourcesContent":["import * as mongoose from 'mongoose';\r\nimport config from '../env/index';\r\nmongoose.set('useFindAndModify', false);\r\ninterface IConnectOptions {\r\n    loggerLevel ? : string;\r\n    useUnifiedTopology ? : boolean;\r\n    useNewUrlParser ? : boolean;\r\n    useCreateIndex ? : boolean;\r\n}\r\n\r\nconst connectOptions: IConnectOptions = {\r\n    useUnifiedTopology: true,\r\n    useNewUrlParser: true,\r\n    useCreateIndex: true,\r\n};\r\n\r\nconst MONGO_URI: string = `${config.database.MONGODB_URI}${config.database.MONGODB_DB_MAIN}`;\r\n\r\nexport const db: mongoose.Connection = mongoose.createConnection(MONGO_URI, connectOptions);\r\n\r\n// handlers\r\n\r\ndb.on('connected', () => {\r\n    console.log('\\x1b[32m', 'MongoDB :: connected');\r\n});\r\n\r\ndb.once('open', () => {\r\n    console.log('\\x1b[32m', 'MongoDB :: connection opened');\r\n});\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"23c5ed2d4c42578883787fdecaa1d739e592c12c","contentHash":"7f07c8a66ad929b21adbc8482334fa5ad8b054d5b858cbd31e9eb0bb85623fd7"},"C:\\Users\\Dani\\mutant\\api\\api\\src\\config\\env\\index.ts":{"path":"C:\\Users\\Dani\\mutant\\api\\api\\src\\config\\env\\index.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":15},"end":{"line":3,"column":32}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":16}},"3":{"start":{"line":5,"column":17},"end":{"line":5,"column":54}},"4":{"start":{"line":6,"column":20},"end":{"line":15,"column":1}},"5":{"start":{"line":16,"column":19},"end":{"line":25,"column":1}},"6":{"start":{"line":26,"column":13},"end":{"line":35,"column":1}},"7":{"start":{"line":36,"column":15},"end":{"line":40,"column":1}},"8":{"start":{"line":41,"column":0},"end":{"line":41,"column":35}}},"fnMap":{},"branchMap":{"0":{"loc":{"start":{"line":5,"column":17},"end":{"line":5,"column":54}},"type":"binary-expr","locations":[{"start":{"line":5,"column":17},"end":{"line":5,"column":37}},{"start":{"line":5,"column":41},"end":{"line":5,"column":54}}],"line":5},"1":{"loc":{"start":{"line":7,"column":10},"end":{"line":7,"column":34}},"type":"binary-expr","locations":[{"start":{"line":7,"column":10},"end":{"line":7,"column":26}},{"start":{"line":7,"column":30},"end":{"line":7,"column":34}}],"line":7},"2":{"loc":{"start":{"line":9,"column":21},"end":{"line":9,"column":76}},"type":"binary-expr","locations":[{"start":{"line":9,"column":21},"end":{"line":9,"column":44}},{"start":{"line":9,"column":48},"end":{"line":9,"column":76}}],"line":9},"3":{"loc":{"start":{"line":10,"column":25},"end":{"line":10,"column":64}},"type":"binary-expr","locations":[{"start":{"line":10,"column":25},"end":{"line":10,"column":52}},{"start":{"line":10,"column":56},"end":{"line":10,"column":64}}],"line":10},"4":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":43}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":30}},{"start":{"line":12,"column":34},"end":{"line":12,"column":43}}],"line":12},"5":{"loc":{"start":{"line":17,"column":10},"end":{"line":17,"column":34}},"type":"binary-expr","locations":[{"start":{"line":17,"column":10},"end":{"line":17,"column":26}},{"start":{"line":17,"column":30},"end":{"line":17,"column":34}}],"line":17},"6":{"loc":{"start":{"line":19,"column":21},"end":{"line":19,"column":75}},"type":"binary-expr","locations":[{"start":{"line":19,"column":21},"end":{"line":19,"column":44}},{"start":{"line":19,"column":48},"end":{"line":19,"column":75}}],"line":19},"7":{"loc":{"start":{"line":20,"column":25},"end":{"line":20,"column":64}},"type":"binary-expr","locations":[{"start":{"line":20,"column":25},"end":{"line":20,"column":52}},{"start":{"line":20,"column":56},"end":{"line":20,"column":64}}],"line":20},"8":{"loc":{"start":{"line":22,"column":12},"end":{"line":22,"column":43}},"type":"binary-expr","locations":[{"start":{"line":22,"column":12},"end":{"line":22,"column":30}},{"start":{"line":22,"column":34},"end":{"line":22,"column":43}}],"line":22},"9":{"loc":{"start":{"line":27,"column":10},"end":{"line":27,"column":34}},"type":"binary-expr","locations":[{"start":{"line":27,"column":10},"end":{"line":27,"column":26}},{"start":{"line":27,"column":30},"end":{"line":27,"column":34}}],"line":27},"10":{"loc":{"start":{"line":29,"column":21},"end":{"line":29,"column":75}},"type":"binary-expr","locations":[{"start":{"line":29,"column":21},"end":{"line":29,"column":44}},{"start":{"line":29,"column":48},"end":{"line":29,"column":75}}],"line":29},"11":{"loc":{"start":{"line":32,"column":12},"end":{"line":32,"column":43}},"type":"binary-expr","locations":[{"start":{"line":32,"column":12},"end":{"line":32,"column":30}},{"start":{"line":32,"column":34},"end":{"line":32,"column":43}}],"line":32}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1},"f":{},"b":{"0":[1,0],"1":[1,0],"2":[1,0],"3":[1,0],"4":[1,1],"5":[1,0],"6":[1,0],"7":[1,0],"8":[1,1],"9":[1,0],"10":[1,0],"11":[1,1]},"inputSourceMap":{"version":3,"file":"C:\\Users\\Dani\\mutant\\api\\api\\src\\config\\env\\index.ts","sources":["C:\\Users\\Dani\\mutant\\api\\api\\src\\config\\env\\index.ts"],"names":[],"mappings":";;AAAA,iCAAiC;AAEjC,MAAM,CAAC,MAAM,EAAE,CAAC;AAahB,MAAM,QAAQ,GAAW,OAAO,CAAC,GAAG,CAAC,QAAQ,IAAI,aAAa,CAAC;AAE/D,MAAM,WAAW,GAAY;IACzB,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI;IAC9B,QAAQ,EAAE;QACN,WAAW,EAAE,OAAO,CAAC,GAAG,CAAC,WAAW,IAAI,4BAA4B;QACpE,eAAe,EAAE,OAAO,CAAC,GAAG,CAAC,eAAe,IAAI,QAAQ;KAC3D;IACD,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,MAAM,IAAI,SAAS;IACvC,MAAM,EAAE,KAAK;IACb,kBAAkB,EAAE,IAAI;CAE3B,CAAC;AAEF,MAAM,UAAU,GAAY;IACxB,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI;IAC9B,QAAQ,EAAE;QACN,WAAW,EAAE,OAAO,CAAC,GAAG,CAAC,WAAW,IAAI,2BAA2B;QACnE,eAAe,EAAE,OAAO,CAAC,GAAG,CAAC,eAAe,IAAI,QAAQ;KAC3D;IACD,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,MAAM,IAAI,SAAS;IACvC,MAAM,EAAE,KAAK;IACb,kBAAkB,EAAE,IAAI;CAC3B,CAAC;AAEF,MAAM,IAAI,GAAY;IAClB,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI;IAC9B,QAAQ,EAAE;QACN,WAAW,EAAE,OAAO,CAAC,GAAG,CAAC,WAAW,IAAI,2BAA2B;QACnE,eAAe,EAAE,aAAa;KACjC;IACD,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,MAAM,IAAI,SAAS;IACvC,MAAM,EAAE,KAAK;IACb,kBAAkB,EAAE,IAAI;CAC3B,CAAC;AAEF,MAAM,MAAM,GAER;IACA,IAAI;IACJ,WAAW;IACX,UAAU;CACb,CAAC;AAEF,kBAAe,MAAM,CAAC,QAAQ,CAAC,CAAC","sourcesContent":["import * as dotenv from 'dotenv';\r\n\r\ndotenv.config();\r\n\r\ninterface IConfig {\r\n    port: string | number;\r\n    database: {\r\n        MONGODB_URI: string;\r\n        MONGODB_DB_MAIN: string;\r\n    };\r\n    secret: string;\r\n    secure: boolean;\r\n    useUnifiedTopology: boolean;\r\n}\r\n\r\nconst NODE_ENV: string = process.env.NODE_ENV || 'development';\r\n\r\nconst development: IConfig = {\r\n    port: process.env.PORT || 3000,\r\n    database: {\r\n        MONGODB_URI: process.env.MONGODB_URI || 'mongodb://localhost:27017/',\r\n        MONGODB_DB_MAIN: process.env.MONGODB_DB_MAIN || 'mutant'\r\n    },\r\n    secret: process.env.SECRET || '@QEGTUI',\r\n    secure: false,\r\n    useUnifiedTopology: true,\r\n    \r\n};\r\n\r\nconst production: IConfig = {\r\n    port: process.env.PORT || 3000,\r\n    database: {\r\n        MONGODB_URI: process.env.MONGODB_URI || 'mongodb://production_uri/',\r\n        MONGODB_DB_MAIN: process.env.MONGODB_DB_MAIN || 'mutant'\r\n    },\r\n    secret: process.env.SECRET || '@QEGTUI',\r\n    secure: false,\r\n    useUnifiedTopology: true,\r\n};\r\n\r\nconst test: IConfig = {\r\n    port: process.env.PORT || 3000,\r\n    database: {\r\n        MONGODB_URI: process.env.MONGODB_URI || 'mongodb://localhost:27017',\r\n        MONGODB_DB_MAIN: 'test_mutant'\r\n    },\r\n    secret: process.env.SECRET || '@QEGTUI',\r\n    secure: false,\r\n    useUnifiedTopology: true,\r\n};\r\n\r\nconst config: {\r\n    [name: string]: IConfig\r\n} = {\r\n    test,\r\n    development,\r\n    production\r\n};\r\n\r\nexport default config[NODE_ENV];\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"879929659dc0c9743b61224527b081b8e11cf0c7","contentHash":"23024a8cd46d5aa1b9eb402700bc157a2a99e2bdc9e525dd6bcac2dca49a50f3"},"C:\\Users\\Dani\\mutant\\api\\api\\src\\components\\Dna\\validation.ts":{"path":"C:\\Users\\Dani\\mutant\\api\\api\\src\\components\\Dna\\validation.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":12},"end":{"line":3,"column":26}},"2":{"start":{"line":4,"column":21},"end":{"line":4,"column":45}},"3":{"start":{"line":7,"column":8},"end":{"line":7,"column":16}},"4":{"start":{"line":10,"column":23},"end":{"line":12,"column":10}},"5":{"start":{"line":13,"column":8},"end":{"line":13,"column":44}},"6":{"start":{"line":16,"column":0},"end":{"line":16,"column":38}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":4},"end":{"line":6,"column":5}},"loc":{"start":{"line":6,"column":18},"end":{"line":8,"column":5}},"line":6},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":18},"end":{"line":14,"column":5}},"line":9}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":5,"5":5,"6":1},"f":{"0":1,"1":5},"b":{},"inputSourceMap":{"version":3,"file":"C:\\Users\\Dani\\mutant\\api\\api\\src\\components\\Dna\\validation.ts","sources":["C:\\Users\\Dani\\mutant\\api\\api\\src\\components\\Dna\\validation.ts"],"names":[],"mappings":";;AAAA,2BAA2B;AAC3B,8CAAuC;AAGvC,MAAM,aAAc,SAAQ,oBAAU;IAElC;QACI,KAAK,EAAE,CAAC;IACZ,CAAC;IAED,KAAK,CACD,MAAiB;QAEjB,MAAM,MAAM,GAAe,GAAG,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC;YACzC,GAAG,EAAE,GAAG,CAAC,KAAK,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,QAAQ,EAAE;SAC3E,CAAC,CAAC;QAEH,OAAO,GAAG,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IACxC,CAAC;CACJ;AAED,kBAAe,IAAI,aAAa,EAAE,CAAC","sourcesContent":["import * as Joi from 'joi';\r\nimport Validation from '../validation';\r\nimport { IDnaModel } from './model';\r\n\r\nclass DnaValidation extends Validation {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    isDna(\r\n        params: IDnaModel\r\n    ): Joi.ValidationResult < IDnaModel > {\r\n        const schema: Joi.Schema = Joi.object().keys({\r\n            dna: Joi.array().min(4).items(Joi.string().min(4).required()).required(),\r\n        });\r\n\r\n        return Joi.validate(params, schema);\r\n    }\r\n}\r\n\r\nexport default new DnaValidation();\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"946acb34946947b90e877e3ff05ebf4b2aa308a5","contentHash":"020480b394327402390248e9df951b01956d1112641ebf9d67126eff6f6c8391"},"C:\\Users\\Dani\\mutant\\api\\api\\src\\components\\validation.ts":{"path":"C:\\Users\\Dani\\mutant\\api\\api\\src\\components\\validation.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":9,"column":8},"end":{"line":9,"column":121}},"2":{"start":{"line":12,"column":0},"end":{"line":12,"column":29}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":4},"end":{"line":8,"column":5}},"loc":{"start":{"line":8,"column":18},"end":{"line":10,"column":5}},"line":8}},"branchMap":{},"s":{"0":1,"1":1,"2":1},"f":{"0":1},"b":{},"inputSourceMap":{"version":3,"file":"C:\\Users\\Dani\\mutant\\api\\api\\src\\components\\validation.ts","sources":["C:\\Users\\Dani\\mutant\\api\\api\\src\\components\\validation.ts"],"names":[],"mappings":";;AAGA;;;GAGG;AACH,MAAe,UAAU;IAKrB;QAJS,oBAAe,GACpB,yFAAyF,CAAC;IAG/E,CAAC;CACnB;AAED,kBAAe,UAAU,CAAC","sourcesContent":["import * as Joi from 'joi';\r\nimport { Types } from 'mongoose';\r\n\r\n/**\r\n * @export\r\n * @class Validation\r\n */\r\nabstract class Validation {\r\n    readonly messageObjectId: string =\r\n        'Argument passed in must be a single String of 12 bytes or a string of 24 hex characters';\r\n\r\n   \r\n    constructor() {}\r\n}\r\n\r\nexport default Validation;\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"03632cbdc50a1bdf9760cc78bc60d5dd1e7bf48b","contentHash":"f795b0b8016e8ab9ae8c0eb7e10bbca0f71c8ea1d96d5b8bba60ddf3b1661267"},"C:\\Users\\Dani\\mutant\\api\\api\\src\\components\\Dna\\module.ts":{"path":"C:\\Users\\Dani\\mutant\\api\\api\\src\\components\\Dna\\module.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":4,"column":20},"end":{"line":4,"column":52}},"2":{"start":{"line":6,"column":20},"end":{"line":6,"column":21}},"3":{"start":{"line":8,"column":26},"end":{"line":8,"column":27}},"4":{"start":{"line":10,"column":21},"end":{"line":10,"column":36}},"5":{"start":{"line":11,"column":4},"end":{"line":11,"column":28}},"6":{"start":{"line":12,"column":4},"end":{"line":12,"column":31}},"7":{"start":{"line":13,"column":4},"end":{"line":13,"column":29}},"8":{"start":{"line":14,"column":4},"end":{"line":14,"column":29}},"9":{"start":{"line":15,"column":4},"end":{"line":15,"column":39}},"10":{"start":{"line":16,"column":4},"end":{"line":16,"column":37}},"11":{"start":{"line":17,"column":4},"end":{"line":17,"column":46}},"12":{"start":{"line":19,"column":0},"end":{"line":19,"column":28}},"13":{"start":{"line":21,"column":4},"end":{"line":21,"column":46}},"14":{"start":{"line":21,"column":23},"end":{"line":21,"column":44}},"15":{"start":{"line":24,"column":4},"end":{"line":30,"column":5}},"16":{"start":{"line":24,"column":17},"end":{"line":24,"column":18}},"17":{"start":{"line":25,"column":19},"end":{"line":25,"column":21}},"18":{"start":{"line":26,"column":8},"end":{"line":28,"column":11}},"19":{"start":{"line":27,"column":12},"end":{"line":27,"column":48}},"20":{"start":{"line":29,"column":8},"end":{"line":29,"column":29}},"21":{"start":{"line":33,"column":15},"end":{"line":33,"column":17}},"22":{"start":{"line":37,"column":4},"end":{"line":44,"column":5}},"23":{"start":{"line":38,"column":8},"end":{"line":38,"column":18}},"24":{"start":{"line":39,"column":8},"end":{"line":41,"column":9}},"25":{"start":{"line":40,"column":12},"end":{"line":40,"column":42}},"26":{"start":{"line":42,"column":8},"end":{"line":43,"column":33}},"27":{"start":{"line":43,"column":12},"end":{"line":43,"column":33}},"28":{"start":{"line":45,"column":4},"end":{"line":52,"column":5}},"29":{"start":{"line":46,"column":8},"end":{"line":46,"column":18}},"30":{"start":{"line":47,"column":8},"end":{"line":49,"column":9}},"31":{"start":{"line":48,"column":12},"end":{"line":48,"column":42}},"32":{"start":{"line":50,"column":8},"end":{"line":51,"column":33}},"33":{"start":{"line":51,"column":12},"end":{"line":51,"column":33}},"34":{"start":{"line":55,"column":4},"end":{"line":57,"column":5}},"35":{"start":{"line":55,"column":36},"end":{"line":55,"column":63}},"36":{"start":{"line":56,"column":8},"end":{"line":56,"column":33}}},"fnMap":{"0":{"name":"isMutant","decl":{"start":{"line":9,"column":9},"end":{"line":9,"column":17}},"loc":{"start":{"line":9,"column":23},"end":{"line":18,"column":1}},"line":9},"1":{"name":"horizontalSearch","decl":{"start":{"line":20,"column":9},"end":{"line":20,"column":25}},"loc":{"start":{"line":20,"column":31},"end":{"line":22,"column":1}},"line":20},"2":{"name":"(anonymous_2)","decl":{"start":{"line":21,"column":12},"end":{"line":21,"column":13}},"loc":{"start":{"line":21,"column":23},"end":{"line":21,"column":44}},"line":21},"3":{"name":"verticalSearch","decl":{"start":{"line":23,"column":9},"end":{"line":23,"column":23}},"loc":{"start":{"line":23,"column":29},"end":{"line":31,"column":1}},"line":23},"4":{"name":"(anonymous_4)","decl":{"start":{"line":26,"column":16},"end":{"line":26,"column":17}},"loc":{"start":{"line":26,"column":27},"end":{"line":28,"column":9}},"line":26},"5":{"name":"diagonalSearch","decl":{"start":{"line":32,"column":9},"end":{"line":32,"column":23}},"loc":{"start":{"line":32,"column":29},"end":{"line":53,"column":1}},"line":32},"6":{"name":"secuenceSearch","decl":{"start":{"line":54,"column":9},"end":{"line":54,"column":23}},"loc":{"start":{"line":54,"column":31},"end":{"line":58,"column":1}},"line":54},"7":{"name":"(anonymous_7)","decl":{"start":{"line":55,"column":25},"end":{"line":55,"column":26}},"loc":{"start":{"line":55,"column":36},"end":{"line":55,"column":63}},"line":55}},"branchMap":{"0":{"loc":{"start":{"line":42,"column":8},"end":{"line":43,"column":33}},"type":"if","locations":[{"start":{"line":42,"column":8},"end":{"line":43,"column":33}},{"start":{"line":42,"column":8},"end":{"line":43,"column":33}}],"line":42},"1":{"loc":{"start":{"line":50,"column":8},"end":{"line":51,"column":33}},"type":"if","locations":[{"start":{"line":50,"column":8},"end":{"line":51,"column":33}},{"start":{"line":50,"column":8},"end":{"line":51,"column":33}}],"line":50},"2":{"loc":{"start":{"line":55,"column":4},"end":{"line":57,"column":5}},"type":"if","locations":[{"start":{"line":55,"column":4},"end":{"line":57,"column":5}},{"start":{"line":55,"column":4},"end":{"line":57,"column":5}}],"line":55}},"s":{"0":1,"1":1,"2":1,"3":1,"4":2,"5":2,"6":2,"7":2,"8":2,"9":2,"10":2,"11":2,"12":1,"13":2,"14":10,"15":2,"16":2,"17":10,"18":10,"19":52,"20":10,"21":4,"22":4,"23":20,"24":20,"25":62,"26":20,"27":8,"28":4,"29":16,"30":16,"31":42,"32":16,"33":4,"34":32,"35":124,"36":3},"f":{"0":2,"1":2,"2":10,"3":2,"4":52,"5":4,"6":32,"7":124},"b":{"0":[8,12],"1":[4,12],"2":[3,29]},"inputSourceMap":{"version":3,"file":"C:\\Users\\Dani\\mutant\\api\\api\\src\\components\\Dna\\module.ts","sources":["C:\\Users\\Dani\\mutant\\api\\api\\src\\components\\Dna\\module.ts"],"names":[],"mappings":"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","sourcesContent":["// secuencias ADN a buscar\r\nconst dnaSequence : string[] = ['AAAA', 'TTTT', 'CCCC', 'GGGG'];\r\n// cantidad minima para considerarlo mutante\r\nconst minSequence : number = 2;\r\n// cantidad de secuencias encontradas\r\nlet mutantSequenceFound : number = 0;\r\n\r\nexport function isMutant(dna: string): boolean {\r\n    const dnaArray : string[] = Array.from(dna);\r\n\r\n    mutantSequenceFound = 0;\r\n    horizontalSearch(dnaArray); // buscar secuencias en filas\r\n    verticalSearch(dnaArray); // buscar secuencias en columnas\r\n    diagonalSearch(dnaArray); // buscar secuencias en diagonal / \r\n    diagonalSearch(dnaArray.reverse()); // buscar secuencias en diagonal secundaria (se invierte matriz para reutilizar metodo anterior) \\ \r\n    console.log(mutantSequenceFound);\r\n\r\n    return mutantSequenceFound >= minSequence;\r\n}\r\n\r\nfunction horizontalSearch(dna: string[]): void {\r\n    dna.map((chain: string) => secuenceSearch(chain));\r\n}\r\n\r\nfunction verticalSearch(dna: string[]) : void {\r\n    for (let i : number = 0; i < dna.length; i++) {\r\n        let word: string = '';\r\n\r\n        dna.map((chain : string) => {\r\n            word = word.concat(chain.charAt(i));\r\n        });\r\n        secuenceSearch(word);\r\n    }\r\n}\r\n\r\nfunction diagonalSearch(dna: string[]) : void {\r\n    let word: string = '';\r\n    let s: number;\r\n    let x: number;\r\n    let y : number;\r\n     \r\n    for (s = 0; s < dna.length; s++) { // por cada fila\r\n        word = '';\r\n        for (y = s, x = 0; y >= 0; y--, x++) {\r\n            word = word.concat(dna[y][x]);\r\n        }\r\n        if (word.length >= dnaSequence[0].length) secuenceSearch(word);\r\n    }\r\n    \r\n    for (s = 1; s < dna[0].length; s++) {\r\n        word = '';\r\n        for (y = dna.length - 1, x = s; x < dna[0].length; y--, x++) {\r\n            word = word.concat(dna[y][x]);\r\n        }\r\n        if (word.length >= dnaSequence[0].length) secuenceSearch(word);\r\n    }\r\n}\r\n\r\n\r\nfunction secuenceSearch(chain: string) : void {\r\n    if (dnaSequence.find((value: string) => chain.indexOf(value) !== -1)) {\r\n        mutantSequenceFound += 1;\r\n    }\r\n}\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"4e2f5161ee06c0d61187e7c3e24f022ddcdfd69b","contentHash":"e3da5bd6c731b97d15896250f6c13b99d2b012a2df31e835494be30bd747f5e8"},"C:\\Users\\Dani\\mutant\\api\\api\\src\\config\\error\\index.ts":{"path":"C:\\Users\\Dani\\mutant\\api\\api\\src\\config\\error\\index.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":13},"end":{"line":3,"column":28}},"2":{"start":{"line":17,"column":8},"end":{"line":17,"column":23}},"3":{"start":{"line":18,"column":8},"end":{"line":18,"column":56}},"4":{"start":{"line":19,"column":8},"end":{"line":19,"column":36}},"5":{"start":{"line":20,"column":8},"end":{"line":20,"column":30}},"6":{"start":{"line":21,"column":8},"end":{"line":21,"column":76}},"7":{"start":{"line":24,"column":0},"end":{"line":24,"column":30}},"8":{"start":{"line":25,"column":0},"end":{"line":25,"column":28}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":5}},"loc":{"start":{"line":16,"column":33},"end":{"line":22,"column":5}},"line":16}},"branchMap":{"0":{"loc":{"start":{"line":19,"column":22},"end":{"line":19,"column":35}},"type":"binary-expr","locations":[{"start":{"line":19,"column":22},"end":{"line":19,"column":28}},{"start":{"line":19,"column":32},"end":{"line":19,"column":35}}],"line":19},"1":{"loc":{"start":{"line":21,"column":23},"end":{"line":21,"column":75}},"type":"binary-expr","locations":[{"start":{"line":21,"column":23},"end":{"line":21,"column":30}},{"start":{"line":21,"column":34},"end":{"line":21,"column":64}},{"start":{"line":21,"column":68},"end":{"line":21,"column":75}}],"line":21}},"s":{"0":1,"1":1,"2":3,"3":3,"4":3,"5":3,"6":3,"7":1,"8":1},"f":{"0":3},"b":{"0":[3,0],"1":[3,0,0]},"inputSourceMap":{"version":3,"file":"C:\\Users\\Dani\\mutant\\api\\api\\src\\config\\error\\index.ts","sources":["C:\\Users\\Dani\\mutant\\api\\api\\src\\config\\error\\index.ts"],"names":[],"mappings":";;AAAA,6BAA6B;AAG7B;;;;GAIG;AACH,MAAa,SAAU,SAAQ,KAAK;IAKhC;;;;;OAKG;IACH,YAAY,MAAiB,EAAE,OAAkB;QAC7C,KAAK,CAAC,OAAO,CAAC,CAAC;QAEf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QAEhD,IAAI,CAAC,MAAM,GAAG,MAAM,IAAI,GAAG,CAAC;QAC5B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACtB,IAAI,CAAC,OAAO,GAAG,OAAO,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,OAAO,CAAC;IACxE,CAAC;CACJ;AApBD,8BAoBC;AAED,kBAAe,SAAS,CAAC","sourcesContent":["import * as http from 'http';\r\nimport { NextFunction, Request, Response } from 'express';\r\n\r\n/**\r\n * @export\r\n * @class HttpError\r\n * @extends {Error}\r\n */\r\nexport class HttpError extends Error {\r\n    status: number;\r\n    message: string;\r\n    name: 'HttpError';\r\n\r\n    /**\r\n     * Creates an instance of HttpError.\r\n     * @param {number} [status]\r\n     * @param {string} [message]\r\n     * @memberof HttpError\r\n     */\r\n    constructor(status ? : number, message ? : string) {\r\n        super(message);\r\n\r\n        Error.captureStackTrace(this, this.constructor);\r\n\r\n        this.status = status || 500;\r\n        this.name = this.name;\r\n        this.message = message || http.STATUS_CODES[this.status] || 'Error';\r\n    }\r\n}\r\n\r\nexport default HttpError;\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"1360ef013d85e311686b463e2c8606d5edabf239","contentHash":"8569b3bac60c2a40beba087723adfbd6edfc11b99ae94e8e26ae46769b9aff18"},"C:\\Users\\Dani\\mutant\\api\\api\\swaggerDef.js":{"path":"C:\\Users\\Dani\\mutant\\api\\api\\swaggerDef.js","statementMap":{"0":{"start":{"line":1,"column":13},"end":{"line":1,"column":28}},"1":{"start":{"line":3,"column":0},"end":{"line":15,"column":2}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1},"f":{},"b":{},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"07b5e5ba1099f0abef9ee93bc23957eb663e71e2","contentHash":"238cfd91149ee518d41d04a896725fd1375e349cc7a75c2dc66afacb8d77c82c"}}